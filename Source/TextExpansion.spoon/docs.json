[ { "Command": [], "Constant": [], "Constructor": [], "Deprecated": [], "Field": [], "Function": [], "Method": [ { "def": "TextExpansion:start()", "desc": "Start TextExpansion", "doc": "Start TextExpansion\n\nParameters:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None\n\nReturns:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion", "name": "start", "notes": [], "parameters": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None", "" ], "returns": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion" ], "signature": "TextExpansion:start()", "stripped_doc": [ "Start TextExpansion", "" ], "type": "Method" }, { "def": "TextExpansion:stop()", "desc": "Stop TextExpansion", "doc": "Stop TextExpansion\n\nParameters:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None\n\nReturns:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion", "name": "stop", "notes": [], "parameters": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None", "" ], "returns": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion" ], "signature": "TextExpansion:stop()", "stripped_doc": [ "Stop TextExpansion", "" ], "type": "Method" } ], "Variable": [ { "def": "TextExpansion.logger", "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.", "doc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.", "name": "logger", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.logger", "stripped_doc": [ "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon." ], "type": "Variable" }, { "def": "TextExpansion.keywords", "desc": "Map of keywords to strings or functions that return a string to be replaced.", "doc": "Map of keywords to strings or functions that return a string to be replaced.", "name": "keywords", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.keywords", "stripped_doc": [ "Map of keywords to strings or functions that return a string to be replaced." ], "type": "Variable" }, { "def": "TextExpansion.prefix", "desc": "Trigger character for TextExpansion to start watching keywords.", "doc": "Trigger character for TextExpansion to start watching keywords.", "name": "prefix", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.prefix", "stripped_doc": [ "Trigger character for TextExpansion to start watching keywords." ], "type": "Variable" }, { "def": "TextExpansion.secondPrefixEnablingMacro", "desc": "Second Prefix to enable replacing macro. If empty, macro always replaced.", "doc": "Second Prefix to enable replacing macro. If empty, macro always replaced.", "name": "secondPrefixEnablingMacro", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.secondPrefixEnablingMacro", "stripped_doc": [ "Second Prefix to enable replacing macro. If empty, macro always replaced." ], "type": "Variable" }, { "def": "TextExpansion.macroStartBy", "desc": "Prefix for Macro Keyword.", "doc": "Prefix for Macro Keyword.", "name": "macroStartBy", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.macroStartBy", "stripped_doc": [ "Prefix for Macro Keyword." ], "type": "Variable" } ], "desc": "Typing prefix and keyword expands pre-set words or function.", "doc": "Typing prefix and keyword expands pre-set words or function.\n\nBased on: https://github.com/Hammerspoon/hammerspoon/issues/1042\n\nDownload: [https://github.com/doiken/Spoons/raw/master/Spoons/TextExpansion.spoon.zip](https://github.com/doiken/Spoons/raw/master/Spoons/TextExpansion.spoon.zip)\n\nHOW TO USE:\n 1. SETUP(see SETUP section)\n 2. type prefix and keyword you set. e.g.\n - `;greeting`\n - `;date`\n 3. enjoy :)\n\nSETUP:\n install manually\n ```\n te = hs.loadSpoon(\"TextExpansion\")\n te.keywords ={\n greeting = \"hello\",\n greeting_with_macro = \"hello @clipboard\",\n date = function() return os.date(\"%B %d, %Y\") end,\n }\n te.prefix = ';'\n te:start()\n ```\n\n install using SpoonInstall\n ```\n hs.loadSpoon(\"SpoonInstall\")\n spoon.SpoonInstall.repos.doiken = {\n url = \"https://github.com/doiken/Spoons\",\n desc = \"doiken's spoon repository\",\n }\n spoon.SpoonInstall:andUse(\"TextExpansion\", {\n repo = 'doiken',\n loglevel = \"warning\",\n config = {\n keywords = {\n ...\n },\n prefix = ','\n },\n start = true\n })\n ```\n\nMACROS:\n You can use following macros in your return string.\n - `@clipboard`: replace with string in clipboard\n - note: If you want to change macro prefix \"@\", set character into variable `macroStartBy`.\n\n You can enable macro replacement to type preset charactor, default: \"+\".\n\n Without preset character, macro is just removed.\n e.g.\n - `;greeting_with_macro` -> hello \n - `;+greeting_with_macro` -> hello NAME_ON_YOUR_CLIPBOARD\n\n You can change preset character by setting `secondPrefixEnablingMacro`.\n\n You can enable macro always without typing preset charactor by setting empty string.\n\nNOTE: TextExpansion expands text via clipboard", "items": [ { "def": "TextExpansion.keywords", "desc": "Map of keywords to strings or functions that return a string to be replaced.", "doc": "Map of keywords to strings or functions that return a string to be replaced.", "name": "keywords", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.keywords", "stripped_doc": [ "Map of keywords to strings or functions that return a string to be replaced." ], "type": "Variable" }, { "def": "TextExpansion.logger", "desc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.", "doc": "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.", "name": "logger", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.logger", "stripped_doc": [ "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon." ], "type": "Variable" }, { "def": "TextExpansion.macroStartBy", "desc": "Prefix for Macro Keyword.", "doc": "Prefix for Macro Keyword.", "name": "macroStartBy", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.macroStartBy", "stripped_doc": [ "Prefix for Macro Keyword." ], "type": "Variable" }, { "def": "TextExpansion.prefix", "desc": "Trigger character for TextExpansion to start watching keywords.", "doc": "Trigger character for TextExpansion to start watching keywords.", "name": "prefix", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.prefix", "stripped_doc": [ "Trigger character for TextExpansion to start watching keywords." ], "type": "Variable" }, { "def": "TextExpansion.secondPrefixEnablingMacro", "desc": "Second Prefix to enable replacing macro. If empty, macro always replaced.", "doc": "Second Prefix to enable replacing macro. If empty, macro always replaced.", "name": "secondPrefixEnablingMacro", "notes": [], "parameters": [], "returns": [], "signature": "TextExpansion.secondPrefixEnablingMacro", "stripped_doc": [ "Second Prefix to enable replacing macro. If empty, macro always replaced." ], "type": "Variable" }, { "def": "TextExpansion:start()", "desc": "Start TextExpansion", "doc": "Start TextExpansion\n\nParameters:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None\n\nReturns:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion", "name": "start", "notes": [], "parameters": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None", "" ], "returns": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion" ], "signature": "TextExpansion:start()", "stripped_doc": [ "Start TextExpansion", "" ], "type": "Method" }, { "def": "TextExpansion:stop()", "desc": "Stop TextExpansion", "doc": "Stop TextExpansion\n\nParameters:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None\n\nReturns:\n FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion", "name": "stop", "notes": [], "parameters": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon None", "" ], "returns": [ " FoAttendance.spoon LastKeyRepeat.spoon PseudoNumKey.spoon Snippet.spoon SwitchableHotkey.spoon TextExpansion.spoon TextExpansion" ], "signature": "TextExpansion:stop()", "stripped_doc": [ "Stop TextExpansion", "" ], "type": "Method" } ], "name": "TextExpansion", "stripped_doc": [], "submodules": [], "type": "Module" } ]
