[
  {
    "Command": [],
    "Constant": [],
    "Constructor": [],
    "Deprecated": [],
    "Field": [],
    "Function": [],
    "Method": [
      {
        "def": "SwitchableHotkey:bindSpec()",
        "desc": "Binds hotkey",
        "doc": "Binds hotkey\n\nParameters:\n * keyspec\n\nReturns:\n * SwitchableHotkey",
        "name": "bindSpec",
        "notes": [],
        "parameters": [
          " * keyspec",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:bindSpec()",
        "stripped_doc": [
          "Binds hotkey",
          ""
        ],
        "type": "Method"
      },
      {
        "def": "SwitchableHotkey:start()",
        "desc": "Start Listener",
        "doc": "Start Listener\n\nParameters:\n * None\n\nReturns:\n * SwitchableHotkey",
        "name": "start",
        "notes": [],
        "parameters": [
          " * None",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:start()",
        "stripped_doc": [
          "Start Listener",
          ""
        ],
        "type": "Method"
      },
      {
        "def": "SwitchableHotkey:stop()",
        "desc": "Stop Listener",
        "doc": "Stop Listener\n\nParameters:\n * None\n\nReturns:\n * SwitchableHotkey",
        "name": "stop",
        "notes": [],
        "parameters": [
          " * None",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:stop()",
        "stripped_doc": [
          "Stop Listener",
          ""
        ],
        "type": "Method"
      },
      {
        "def": "SwitchableHotkey:init()",
        "desc": "initializer",
        "doc": "initializer\n\nParameters:\n * None\n\nReturns:\n * SwitchableHotkey",
        "name": "init",
        "notes": [],
        "parameters": [
          " * None",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:init()",
        "stripped_doc": [
          "initializer",
          ""
        ],
        "type": "Method"
      }
    ],
    "Variable": [
      {
        "def": "SwitchableHotkey.acceptOnly",
        "desc": "Table of app name and enabled hot keys.",
        "doc": "Table of app name and enabled hot keys.\nDefault is all enabled.\nShould be set before SwitchableHotkey:init() called.\ne.g. \nspoon.SwitchableHotkey.acceptOnly = {\n  [\"Emacs\"] = {}, -- accept NONE\n  [\"iTerm2\"] = {  -- accept partially\n    {{'ctrl'}, ']'},\n  }\n  -- Hotkeys of apps not listed above are fully enabled\n}",
        "name": "acceptOnly",
        "notes": [],
        "parameters": [],
        "returns": [],
        "signature": "SwitchableHotkey.acceptOnly",
        "stripped_doc": [
          "Table of app name and enabled hot keys.",
          "Default is all enabled.",
          "Should be set before SwitchableHotkey:init() called.",
          "e.g. ",
          "spoon.SwitchableHotkey.acceptOnly = {",
          "  [\"Emacs\"] = {}, -- accept NONE",
          "  [\"iTerm2\"] = {  -- accept partially",
          "    {{'ctrl'}, ']'},",
          "  }",
          "  -- Hotkeys of apps not listed above are fully enabled",
          "}"
        ],
        "type": "Variable"
      },
      {
        "def": "SwitchableHotkey._acceptOnly",
        "desc": "Internal Table for looking up accepted hotkeys.",
        "doc": "Internal Table for looking up accepted hotkeys.",
        "name": "_acceptOnly",
        "notes": [],
        "parameters": [],
        "returns": [],
        "signature": "SwitchableHotkey._acceptOnly",
        "stripped_doc": [
          "Internal Table for looking up accepted hotkeys."
        ],
        "type": "Variable"
      }
    ],
    "desc": "HotKeys to which you can switch by each application.",
    "doc": "HotKeys to which you can switch by each application.\n\nDownload: [https://github.com/doiken/Spoons/raw/master/Spoons/SwitchableHotkey.spoon.zip](https://github.com/doiken/Spoons/raw/master/Spoons/SwitchableHotkey.spoon.zip)",
    "items": [
      {
        "def": "SwitchableHotkey._acceptOnly",
        "desc": "Internal Table for looking up accepted hotkeys.",
        "doc": "Internal Table for looking up accepted hotkeys.",
        "name": "_acceptOnly",
        "notes": [],
        "parameters": [],
        "returns": [],
        "signature": "SwitchableHotkey._acceptOnly",
        "stripped_doc": [
          "Internal Table for looking up accepted hotkeys."
        ],
        "type": "Variable"
      },
      {
        "def": "SwitchableHotkey.acceptOnly",
        "desc": "Table of app name and enabled hot keys.",
        "doc": "Table of app name and enabled hot keys.\nDefault is all enabled.\nShould be set before SwitchableHotkey:init() called.\ne.g. \nspoon.SwitchableHotkey.acceptOnly = {\n  [\"Emacs\"] = {}, -- accept NONE\n  [\"iTerm2\"] = {  -- accept partially\n    {{'ctrl'}, ']'},\n  }\n  -- Hotkeys of apps not listed above are fully enabled\n}",
        "name": "acceptOnly",
        "notes": [],
        "parameters": [],
        "returns": [],
        "signature": "SwitchableHotkey.acceptOnly",
        "stripped_doc": [
          "Table of app name and enabled hot keys.",
          "Default is all enabled.",
          "Should be set before SwitchableHotkey:init() called.",
          "e.g. ",
          "spoon.SwitchableHotkey.acceptOnly = {",
          "  [\"Emacs\"] = {}, -- accept NONE",
          "  [\"iTerm2\"] = {  -- accept partially",
          "    {{'ctrl'}, ']'},",
          "  }",
          "  -- Hotkeys of apps not listed above are fully enabled",
          "}"
        ],
        "type": "Variable"
      },
      {
        "def": "SwitchableHotkey:bindSpec()",
        "desc": "Binds hotkey",
        "doc": "Binds hotkey\n\nParameters:\n * keyspec\n\nReturns:\n * SwitchableHotkey",
        "name": "bindSpec",
        "notes": [],
        "parameters": [
          " * keyspec",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:bindSpec()",
        "stripped_doc": [
          "Binds hotkey",
          ""
        ],
        "type": "Method"
      },
      {
        "def": "SwitchableHotkey:init()",
        "desc": "initializer",
        "doc": "initializer\n\nParameters:\n * None\n\nReturns:\n * SwitchableHotkey",
        "name": "init",
        "notes": [],
        "parameters": [
          " * None",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:init()",
        "stripped_doc": [
          "initializer",
          ""
        ],
        "type": "Method"
      },
      {
        "def": "SwitchableHotkey:start()",
        "desc": "Start Listener",
        "doc": "Start Listener\n\nParameters:\n * None\n\nReturns:\n * SwitchableHotkey",
        "name": "start",
        "notes": [],
        "parameters": [
          " * None",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:start()",
        "stripped_doc": [
          "Start Listener",
          ""
        ],
        "type": "Method"
      },
      {
        "def": "SwitchableHotkey:stop()",
        "desc": "Stop Listener",
        "doc": "Stop Listener\n\nParameters:\n * None\n\nReturns:\n * SwitchableHotkey",
        "name": "stop",
        "notes": [],
        "parameters": [
          " * None",
          ""
        ],
        "returns": [
          " * SwitchableHotkey"
        ],
        "signature": "SwitchableHotkey:stop()",
        "stripped_doc": [
          "Stop Listener",
          ""
        ],
        "type": "Method"
      }
    ],
    "name": "SwitchableHotkey",
    "stripped_doc": [],
    "submodules": [],
    "type": "Module"
  }
]
